# Example Queries

# List messages with pagination
query {
  messages(first: 5) {
    edges {
      node {
        id
        content
        createdAt
      }
      cursor
    }
    pageInfo {
      hasNextPage
      endCursor
    }
  }
}

# List accounts
query {
  accounts(first: 5) {
    edges {
      node {
        id
        accountNumber
        balance
        userTaxId
        createdAt
        updatedAt
      }
      cursor
    }
    pageInfo {
      hasNextPage
      endCursor
    }
  }
}

# Fetch a single account by ID
query {
  account(id: "<ACCOUNT_ID>") {
    id
    accountNumber
    balance
    userTaxId
    transactions(first: 3) {
      edges {
        node {
          id
          value
          createdAt
          type
        }
      }
    }
  }
}

# Fetch a single account by accountNumber
query {
  account(id: "999") { # accountNumber can be used directly
    id
    accountNumber
    balance
    userTaxId
  }
}

# List transactions
query {
  transactions(first: 5) {
    edges {
      node {
        id
        value
        senderAccountId
        receiverAccountId
        description
        createdAt
        type
      }
      cursor
    }
    pageInfo {
      hasNextPage
      endCursor
    }
  }
}

# Fetch a single transaction by ID
query {
  transaction(id: "<TRANSACTION_ID>") {
    id
    value
    senderAccountId
    receiverAccountId
    description
    createdAt
    type
  }
}

# Example Mutations

# Add an account
mutation {
  AccountAdd(input: {
    accountNumber: "11"
    balance: 1000
    userTaxId: "TAX1234567"
    name: "Conta Principal"
    clientMutationId: "test"
  }) {
    account {
      id
      accountNumber
      balance
      name
    }
    clientMutationId
  }
}

# Add a transaction
mutation {
  createTransaction(input: {
    value: 500
    senderAccountId: "<SENDER_ID>"
    receiverAccountId: "<RECEIVER_ID>"
    idempotencyKey: "unique-key-001"
    clientMutationId: "test"
  }) {
    transaction {
      id
      value
    }
    clientMutationId
  }
}

# Example: Create a transaction using accountNumber for sender/receiver
mutation {
  createTransaction(input: {
    value: 10
    senderAccountId: "444"
    receiverAccountId: "999"
    idempotencyKey: "unique-key-009"
    clientMutationId: "test"
  }) {
    transaction {
      id
      value
      senderAccountId
      receiverAccountId
      createdAt
    }
    clientMutationId
  }
}

# Example Subscriptions

# Subscribe to new accounts
subscription {
  AccountAdded(input: {clientSubscriptionId: "test"}) {
    account {
      id
      accountNumber
      balance
    }
    clientSubscriptionId
  }
}

# Subscribe to new transactions
subscription {
  TransactionAdded(input: {clientSubscriptionId: "test"}) {
    transaction {
      id
      value
      senderAccountId
      receiverAccountId
      type
    }
    clientSubscriptionId
  }
}
